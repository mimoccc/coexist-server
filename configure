#!/bin/bash

## Print the usage out. Used in errors.
usage(){
cat << EOF
usage: $0 options

OPTIONS
  -v  Initial version integer.  Defaults to 1
  -m  database system.          Defaults to mysql
  -h  hostname for database.    Defaults to localhost
  -u  database username
  -p  database password
  -d  database name
  -c  Path to the conf/ui dir
  -s  Path of the conf/sql dir

EOF
}

CONF=conf/conf.ini
writeConf(){
cat << EOF > $CONF
;; Configuration file for the Coexist web api
;; Automatically generated by Coexist

; The version of the application, an arbitrary integer.
; You can increment this number to cause clients to resync. So if the
; version is currently 1, then the schema sent to clients is 
; conf/sql/sqlite/1/schema.sql (or a different dbms). If you then increment
; this version to 2, then the clients will use conf/sql/sqlite/2/schema.sql
version=$VERSION

; Database credentials
user=$USER
pass=$PASS
db=$DB
host=$HOST
dbms=$DBMS
EOF
}


## Make sure the name and image path were supplied
validate(){
if [[ -z $USER ]] || [[ -z $PASS ]] || [[ -z $DB ]] || [[ -z $CREATE ]] || [[ -z $SCHEMA ]]
then
  usage
  exit 1
fi
}

## Parse the command line switches 
VERSION=1
HOST=localhost
DBMS=mysql
USER=
PASS=
DB=
CREATE=
SCHEMA=
while getopts "v:m:h:u:p:d:c:s:" OPTION
do
  case $OPTION in
    v) VERSION=$OPTARG;;
    m) DBMS=$OPTARG;;
    h) HOST=$OPTARG;;
    u) USER=$OPTARG;;
    p) PASS=$OPTARG;;
    d) DB=$OPTARG;;
    c) CREATE=$OPTARG;;
    s) SCHEMA=$OPTARG;;

    \?) exit 1;;
  esac
done
validate

## Create the conf.ini file
writeConf
cp -r $SCHEMA $CREATE conf/


